import streamlit as st
from streamlit_theme import st_theme
import numpy as np
import uproot # for reading .root files
import awkward as ak # for handling complex and nested data structures efficiently
import pandas as pd
from utils_analysis import *
from PIL import Image
import base64
import os
import json
import random
import time

                
def run(selected_language):
    # Initialize everything needed
    # Initialize flags to keep track of each step
    if 'data_loaded' not in st.session_state:
        st.session_state.data_loaded = False

    if 'nlepton_cut_applied' not in st.session_state:
        st.session_state.nlepton_cut_applied = False

    if 'leptontype_cut_applied' not in st.session_state:
        st.session_state.leptontype_cut_applied = False

    if 'leptoncharge_cut_applied' not in st.session_state:
        st.session_state.leptoncharge_cut_applied = False

    if 'leptonpt_cut_applied' not in st.session_state:
        st.session_state.leptonpt_cut_applied = False

    if 'invariant_mass_calculated' not in st.session_state:
        st.session_state.invariant_mass_calculated = False
    
    if 'mc_loaded' not in st.session_state:
        st.session_state.mc_loaded = False

    # Initialize a special session state variable for the selectbox
    # This is so that the first cut option resets when using the reset analysis button
    if 'n_leptons_selection' not in st.session_state:
        st.session_state['n_leptons_selection'] = "--"

    # Initilize the expanders for the quizzes
    # First time they are expanded, when reseting they are not
    if 'expand_all' not in st.session_state:
        st.session_state['expand_all'] = True

    # Initialize session state for hint on lepton cut
    if 'show_hint' not in st.session_state:
        st.session_state['show_hint'] = False

    # Define a function to toggle the hint
    def toggle_hint():
        st.session_state['show_hint'] = not st.session_state['show_hint']

    if 'is_higgs' not in st.session_state:
        st.session_state['is_higgs'] = False

    if 'is_z' not in st.session_state:
        st.session_state['is_z'] = False

    # Get the current theme using st_theme
    theme = st_theme()

    # This is the json with all the info for all analyses
    # Build the path to the JSON file
    json_file_path = os.path.join('analyses', 'event_counts.json')
    # Open and load the JSON file
    with open(json_file_path, 'r') as json_file:
        analyses = json.load(json_file)


    ################ HERE IS WERE THE APP STARTS ################
    st.title("¬°Descubre el Bos√≥n Z y el Bos√≥n de Higgs t√∫ mismo!")

    # Introduction
    st.markdown("""
    Con esta aplicaci√≥n interactiva podr√°s descubrir los bosones Z y de Higgs.
    ¬°Comprendiendo y seleccionando eventos descubrir√°s las part√≠culas t√∫ mismo!
    """)

    st.markdown("## ¬øCu√°ntos datos quieres utilizar?")
    st.markdown("""Comience su an√°lisis eligiendo la cantidad de datos con los que desea trabajar. Utilice el control deslizante a continuaci√≥n para seleccionar la **luminosidad integrada**, que es una medida de la cantidad de datos que ha recopilado el detector ATLAS.

Cuantos m√°s datos analice, m√°s posibilidades tendr√° de detectar eventos raros como el bos√≥n de Higgs. Pero tenga en cuenta que *m√°s datos tambi√©n pueden significar m√°s tiempo de procesamiento*.""")    
    # Create a slider for luminosity
    lumi = st.slider(
        'Seleccionar luminosidad (fb$^{-1}$):', 
        min_value=12, 
        max_value=36, 
        step=12, 
        value=12
    )

    if st.button("Carga los datos"):
        # Reset the steps, so that people cannot break it clicking again
        # Reset info for the events
        if st.session_state.nlepton_cut_applied:
            # Reset flags
            st.session_state.nlepton_cut_applied = False
            st.session_state.leptontype_cut_applied = False
            st.session_state.leptoncharge_cut_applied = False
            st.session_state.invariant_mass_calculated = False
            st.session_state.mc_loaded = False
            st.session_state.is_z = False
            st.session_state.is_higgs = False

            # Delete the widget keys from session_state
            for key in ['n_leptons_selection', 'flavor_selection', 'charge_pair_selection']:
                if key in st.session_state:
                    del st.session_state[key]
        
        # Reading the data
        random_sleep = random.randint(1, lumi)
        # Display a spinner with the loading message
        with st.spinner("Cargando datos... Por favor espere."):
            # Simulate a time-consuming process with a random sleep
            time.sleep(random_sleep)

        st.session_state.data_loaded = True
        st.toast('¬°Datos cargados exitosamente!', icon='üìà')
        
    if st.session_state.data_loaded:
        st.info(f" N√∫mero inicial de eventos: {analyses[f'{lumi}']['nEvents']}")

        with st.expander("üîç Quiz", expanded=st.session_state['expand_all']):
            st.markdown("##### ‚ÅâÔ∏è Entendiendo la luminosidad")
            st.markdown(f"Seleccionaste una luminosidad de **{lumi} fb‚Åª¬π**. Pero, ¬øqu√© representa realmente la luminosidad integrada en un experimento de f√≠sica de part√≠culas?")

            possible = ['La cantidad de tiempo que el detector est√° activo',
                        'La cantidad de colisiones por segundo',
                        'Una medida de la cantidad total de colisiones durante un per√≠odo de tiempo',
                        'La energ√≠a a la que ocurren las colisiones']
            answer = st.radio("Elige tu respuesta:", possible, index=None)

            if answer == possible[2]:
                st.success("¬°Correcto! La luminosidad representa el n√∫mero total de colisiones en el conjunto de datos. Cuanto mayor sea la luminosidad, mayores ser√°n las posibilidades de observar eventos raros como el bos√≥n de Higgs")
            elif answer:
                st.error("Incorrecto. ¬°Int√©ntelo de nuevo o lea m√°s sobre luminosidad!")

        # Using a selectbox to let users choose between amounts of leptons
        st.markdown("## N√∫mero de leptones en el estado final")
        st.markdown("En los colisionadores de part√≠culas, cuando se produce una part√≠cula, puede decaer inmediatamente en otras part√≠culas, que se detectan y analizan. Al identificar todas las part√≠culas en el estado final, podemos inferir qu√© part√≠culas se crearon inicialmente durante la colisi√≥n. Un ejemplo es el n√∫mero de leptones en el estado final, ya que diferentes procesos producen diferentes cantidades de leptones.")
        st.markdown("A continuaci√≥n se muestra un diagrama de Feynman que muestra un proceso t√≠pico que da como resultado un estado final con dos leptones:")
        # Diagram for Z decay
        image_zdecay = f"images/Z_decay_{theme['base']}.png"
        # Encode the image in base64
        with open(image_zdecay, "rb") as image_file:
            encoded_string = base64.b64encode(image_file.read()).decode()
        # Display the image centered and resizable using HTML with CSS
        st.markdown(
            f"""
            <div style="text-align: center;">
                <img src="data:image/png;base64,{encoded_string}" alt="Centered Image" 
                    style="width: 50%; max-width: 500px; height: auto;">
                <figcaption style="font-size: 0.9em; color: gray;">El bos√≥n Z decae a dos leptones.</figcaption>
            </div>
            """,
            unsafe_allow_html=True
        )

        st.markdown("Decaimientos m√°s complejas pueden implicar m√°s leptones en el estado final")
        # Diagram for H decay
        image_zdecay = f"images/higgs4l_decay_{theme['base']}.png"
        # Encode the image in base64
        with open(image_zdecay, "rb") as image_file:
            encoded_string = base64.b64encode(image_file.read()).decode()
        # Display the image centered and resizable using HTML with CSS
        st.markdown(
            f"""
            <div style="text-align: center;">
                <img src="data:image/png;base64,{encoded_string}" alt="Centered Image" 
                    style="width: 50%; max-width: 500px; height: auto;">
                <figcaption style="font-size: 0.9em; color: gray;">El bos√≥n de Higgs decae a bosones Z y, posteriormente, a leptones.</figcaption>
            </div>
            """,
            unsafe_allow_html=True
        )
        
        st.markdown("A continuaci√≥n se puede ver el recuento de leptones en todo el conjunto de datos. Notamos que, en general, es m√°s com√∫n tener menos leptones en un evento")
        # Get the appropriate plot file based on the theme
        st.image(f"images/lepton_plot_{theme['base']}_{lumi}.png")

        st.markdown("Estudia los diagramas y los datos, y selecciona cu√°ntos leptones esperas observar en tu estado final dependiendo del an√°lisis que est√©s haciendo: encontrar el bos√≥n Z o el bos√≥n de Higgs.")
        
        st.warning("""
        Est√°s a punto de seleccionar la cantidad de leptones que deseas en tus datos. Sin embargo, es importante tener en cuenta que hemos agregado criterios adicionales para garantizar la calidad de estos leptones:

        - **Aislamiento:** cada lept√≥n debe estar aislado, lo que significa que no est√° agrupado con otras part√≠culas. Esto garantiza que nos estamos centrando en los leptones que probablemente se originaron directamente de la part√≠cula que nos interesa, en lugar de interacciones de fondo.
        - **Niveles de identificaci√≥n:** los leptones deben cumplir con criterios de identificaci√≥n espec√≠ficos para confirmar su tipo con alta confianza. La reconstrucci√≥n de part√≠culas es compleja, por lo que tenemos diferentes niveles de identificaci√≥n para mayor certeza. Por ejemplo, los muones deben pasar un nivel de identificaci√≥n medio, mientras que los electrones solo necesitan pasar un nivel de identificaci√≥n flexible, ya que los electrones son m√°s f√°ciles de detectar.
        - **Condiciones de trigger:** los triggers son criterios establecidos para capturar eventos con ciertas caracter√≠sticas, lo que permite guardar solo los eventos que queremos analizar. Aqu√≠, utilizamos triggers de electrones y muones para seleccionar eventos con se√±ales significativas, refinando el conjunto de datos para aumentar las posibilidades de observar part√≠culas que decaen a leptones o muones.

        Estos criterios ayudan a "limpiar" los datos, mejorando nuestras posibilidades de observar part√≠culas como los bosones Z y Higgs.
        """)

        # Define the options
        n_leptons_options = ("--", 2, 3, 4)

        # Create the selectbox
        n_leptons = st.selectbox(
            '¬øCu√°ntos leptones esperas en el estado final?',
            n_leptons_options,
            index=0,  # Default index for "--"
            key='n_leptons_selection'
        )

        # Access the selected value from session_state
        n_leptons = st.session_state['n_leptons_selection']

        if n_leptons == 2:
            st.success("""Has elegido un estado final con **2 leptones**.
                        Esto sugiere que te interesa un proceso en el que una √∫nica part√≠cula intermedia deca a un par de leptones.
                        Los pares de leptones son comunes en muchas interacciones de part√≠culas, especialmente cuando se consideran intermediarios neutros""")
        elif n_leptons == 4:
            st.success("""Est√°s viendo **4 leptones** en el estado final.
                        Esto a menudo indica una cadena de decaimientos, donde m√∫ltiples part√≠culas intermedias decaen a pares de leptones.
                        Estos escenarios son interesantes para estudiar interacciones complejas""")
        elif n_leptons != '--':
            st.warning("""Tener un n√∫mero impar de leptones es inusual en procesos de desintegraci√≥n simples, ya que los leptones suelen producirse en pares debido a las leyes de conservaci√≥n.
                        Sin embargo, esto podr√≠a sugerir que est√°s explorando modos de desintegraci√≥n m√°s ex√≥ticos. ¬øEst√°s buscando materia oscura?""")

        # Number of leptons button
        # We define a variable to avoid the page breaking when clicked more than once
        if st.button("Aplicar selecci√≥n por n√∫mero de leptones"):
            if st.session_state.nlepton_cut_applied:
                st.toast("Ya aplicaste una selecci√≥n. Para reiniciar el an√°lisis ve al final de la p√°gina.", icon='‚ùå')
            elif n_leptons != '--':
                random_sleep = random.randint(1, round(lumi/3))
                # Display a spinner with the loading message
                with st.spinner("Seleccionando eventos... Por favor espere."):
                    # Simulate a time-consuming process with a random sleep
                    time.sleep(random_sleep)
                st.session_state.nlepton_cut_applied = True
                st.toast("Selecci√≥n aplicada exitosamente.", icon='‚úÇÔ∏è')
            else:
                st.error("Seleccione un n√∫mero v√°lido de leptones.")

    # Step 2: Dynamically generate selection for lepton flavors
    if st.session_state.nlepton_cut_applied:
        st.info(f"Eventos luego de la selecci√≥n: {analyses[f'{lumi}'][f'{n_leptons}leptons']['nEvents']}")

        with st.expander("üîç Quiz", expanded=st.session_state['expand_all']):
            st.markdown("##### ‚ÅâÔ∏è Estado final de Leptones")
            st.markdown(f"""
            ¬øQu√© puede indicar el n√∫mero de leptones?
            """)

            possible_lepton = ['Dos leptones indican una desintegraci√≥n simple de una part√≠cula neutra, como un bos√≥n Z',
                            'Cuatro leptones indican una cadena de desintegraci√≥n m√°s compleja, que posiblemente involucre a un bos√≥n de Higgs',
                            'Un n√∫mero impar de leptones sugiere un proceso ex√≥tico',
                            'Todas las anteriores']
            answer_lepton = st.radio("Elige tu respuesta:", possible_lepton, index=None, key="lepton_selection_quiz")

            if answer_lepton == possible_lepton[3]:
                st.success("¬°Correcto! Cada opci√≥n representa una posibilidad en funci√≥n de tu selecci√≥n.")
            elif answer_lepton:
                st.error("Incorrecto. Intenta pensar en c√≥mo se producen los leptones en pares.")

        st.markdown("## Garanticemos la conservaci√≥n")
        st.markdown("En las interacciones entre part√≠culas, [ciertas propiedades siempre se conservan](https://cds.cern.ch/record/2791335/files/Conservation%20Laws%20-%20ATLAS%20Physics%20Cheat%20Sheet%20in%20Spanish%20%7C%20Leyes%20de%20Conservaci√≥n.pdf), como la *carga* y el *sabor* lept√≥nico. Comprender estas leyes de conservaci√≥n ayuda a reducir las posibilidades de las part√≠culas que est√°n involucradas en el estado final.")
        st.markdown("En tu an√°lisis, puedes ver el 'sabor' de los leptones (es decir, si son electrones o muones) y su carga (positiva o negativa). Las part√≠culas con carga opuesta se llaman antipart√≠culas, un electron positivo se llama positron y un mu√≥n positivo, anti-mu√≥n. El plot siguiente muestra la distribuci√≥n del sabor de los leptones, con una barra para leptones cargados positivamente y otra para leptones cargados negativamente. Esto ayuda a identificar si el estado final obedece reglas de conservaci√≥n.")
        
        # Display the pre-generated plot based on the theme
        st.image(f"images/lepton_barplot_{theme['base']}_{lumi}.png")
        
        st.markdown("Con esto en mente, realicemos la siguiente selecci√≥n. Si no est√°s seguro, vuelve a ver los diagramas de Feynmann que est√°n arriba. Puede que en ellos encuentres informaci√≥n que te pueda ayudar.")

        flavor_options = ["--", 'Mismo', 'Diferente']
        flavor = st.selectbox(f'¬øDeber√≠an los pares de leptones tener el mismo o diferente sabor?', flavor_options, key=f"flavor_selection")

        if flavor == 'Mismo':
            flavor = 'Same' #! Como arreglar esto para los diferentes idiomas
            st.success("""
                    Seleccionar dos leptones del mismo sabor significa que est√°s considerando escenarios donde las propiedades de los leptones son id√©nticas, 
                    como dos electrones o dos muones. Pares del mismo sabor se presentan en escenarios donde los decaimientos producto de la interacci√≥n entre 
                    part√≠culas respeta la conservaci√≥n de sabor.
                    """)
            
        elif flavor!= '--':
            flavor = 'Different'
            st.warning("""
                    Escoger leptones de diferentes sabores indica que est√°s examinando una situaci√≥n donde los leptones no son id√©nticos, como un electr√≥n y un mu√≥n.
                    Mientras esto puede ocurrir en algunos procesos, es menos com√∫n en decaimientos simples debido a las leyes de conservaci√≥n de sabor.
                    """)
            
        # Apply lepton type cut based on flavor selection
        if st.button("Aplica selecci√≥n de tipo de leptones"):
            if st.session_state.leptontype_cut_applied:
                st.toast("Ya aplicaste una selecci√≥n. Para reiniciar el an√°lisis ve al final de la p√°gina.", icon='‚ùå')
            elif flavor != '--':    
                # Display a spinner with the loading message
                random_sleep = random.randint(1, round(lumi/3))
                with st.spinner("Seleccionando eventos... Por favor espere."):
                    # Simulate a time-consuming process with a random sleep
                    time.sleep(random_sleep)

                # Display the cut result
                st.session_state.leptontype_cut_applied = True
                st.toast("Selecci√≥n aplicada exitosamente.", icon='‚úÇÔ∏è')

            else:
                st.error("Selecciona una opci√≥n para el sabor de los leptones")

    # Step 3: Dynamically generate selection for lepton charges
    if st.session_state.leptontype_cut_applied:
        st.info(f"Eventos luego de la selecci√≥n: {analyses[f'{lumi}'][f'{n_leptons}leptons'][f'flavor{flavor}']['nEvents']}")

        # Offer options for charge pairing: Same charge or Opposite charge
        charge_pair_options = ["--",'Igual', 'Opuesta']
        charge = st.selectbox('¬øDeber√≠an los pares de leptones tener la carga igual o contraria?', charge_pair_options)

        # Define the condition for the charge mask based on the selection
        if charge == 'Igual':
            charge = 'Same'
            st.warning("""Pares de leptones con la misma carga son inusuales porque usualmente la carga se conserva en las interacciones.
                    Sin embargo, algunos procesos m√°s ex√≥tico, o identificaci√≥n erronea puede resultar en pares con igual cargaa.
                    """)
        elif charge != '--':
            charge = 'Opposite'
            st.success("""Haz escogido leptones con carga opuesta. La mayor√≠a de las interacciones conservan la carga,
                    por lo que es usual ver producci√≥n conjunta de un lepton y su antiparticulaso, resultando en cargas opuestas.
                    """)

            # Apply lepton type cut based on flavor selection
        if st.button("Apply lepton charge selection"):
            if st.session_state.leptoncharge_cut_applied:
                st.toast("Ya aplicaste una selecci√≥n. Para reiniciar el an√°lisis ve al final de la p√°gina.", icon='‚ùå')
            elif charge != '--':
                # Display a spinner with the loading message
                random_sleep = random.randint(1, round(lumi/3))
                with st.spinner("Seleccionando eventos... Por favor espere."):
                    # Simulate a time-consuming process with a random sleep
                    time.sleep(random_sleep)
                    st.session_state.leptoncharge_cut_applied = True

                    # Provide feedback to the user
                    st.toast("Selecci√≥n aplicada exitosamente.", icon='‚úÇÔ∏è')
            else:
                st.error("Selecciona una opci√≥n para la carga de los leptones.")

        if st.session_state.leptoncharge_cut_applied:
            st.info(f"Eventos luego de la selecci√≥n: {analyses[f'{lumi}'][f'{n_leptons}leptons'][f'flavor{flavor}'][f'charge{charge}']['nEvents']}")

        
            with st.expander("üîç Quiz", expanded=st.session_state['expand_all']):
                st.markdown("##### ‚ÅâÔ∏è Entendiendo la Selecci√≥n de Carga")
                st.markdown(f"""
                Seleccionaste pares de leptones con **carga {charge}**. ¬øPor qu√© es la carga de los leptones importante en f√≠sica de part√≠culas?
                """)
                possible_charge = [
                    'La conservaci√≥n de la carga es un principio fundamental y los productos de decaimientos deber√≠an conservar la carga',
                    'Leptones con la misma carga son m√°s comunes en decaimientos de part√≠culas como el decaimiento del bos√≥n Z',
                    'La carga no juega un rol importante en las interacciones de particulas',
                    'Pares de leptones de la misma carga indican colisiones altamente energ√©ticas'
                ]
                
                answer_charge = st.radio("Elige tu respuesta:", 
                                        possible_charge, 
                                        index=None, key="charge_selection_quiz")

                # Checking for the correct answer and giving feedback
                if answer_charge == possible_charge[0]:
                    st.success("¬°Correcto! La conservaci√≥n de la carga es un fundamental en la f√≠sica de part√≠culas, y leptones de cargas opuestas son t√≠picos en decaimientos como los del bos√≥n Z.")
                elif answer_charge:
                    st.error("Incorrecto. Considera c√≥mo la conservaci√≥n de la carga funciona en los decaimientos. Leptone de carga opuesta son esperados en muchos decaimientos.")


                if n_leptons==2 and flavor=='Same' and charge=='Opposite':
                    st.session_state.is_z = True
                elif n_leptons==4 and flavor=='Same' and charge=='Opposite':
                    st.session_state.is_higgs = True
    
    # Step 4: Cuts on leptons pT only for Higgs
    if st.session_state.leptoncharge_cut_applied and st.session_state.is_higgs:
        st.markdown("## Cortes en el p$_T$ de los Leptones ")
        st.markdown("""En nuestra b√∫squeda por el **bos√≥n de Higgs**, nos valemos de **cortes** que nos ayudan a encontrarlo en una vasta cantidad de datos. Una forma en la que podemos hacer esto es enfocandonos en una variable llamada **momento transverso** (p$_T$), que representa el momento de las part√≠culas perpendiculas al eje del haz.

Cada lepton en nuestros datos tiene un valor de p$_T$, que hemos guardado en orden descendiente como **principal** (mayor p$_T$), **secundario**, y as√≠ sucesivamente. Al examinar estos valores, podemos aplicar cortes para s√≥lo quedarnos con los datos con las caracter√≠sticas m√°s parecidas a aquellas del bos√≥n de Higgs, mientras eliminamos datos que es menos probable que lo contengan.

Una forma de aislar al Higgs es aplicar cortes que remuevan regiones donde el **fondo** (datos no relacionados al Higgs, pero con caracter√≠sticas similares) tienden a dominar, dejando m√°s eventos que concuerda con una huella como la del Higgs. Esto significa establecer limites inferiores en el p$_T$ de los leptones, ya que mayores valores de p$_T$ values m√°s probablemente capturen los eventos en los que estamos interesados.

Los gr√°ficos siguientes muestran la distribuci√≥n de p$_T$ del primer, segundo y tercer lept√≥n en se√±al simulada (el Higgs que estamos buscando) y simulaci√≥n del fondo. Aplicando cortes a los valores bajos de p$_T$ puede ayudar a reducir el fondo y mejorar la visibilidad de potenciales eventos del Higgs.
""")

        # Display initial image
        if not st.session_state['show_hint']:
            st.image(f"images/lepton_pt_{theme['base']}.png", caption="Distribuci√≥n de pT de los tres leptones m√°s energ√©ticos en cada evento.")
        else:
            st.image(f"images/lepton_pt_{theme['base']}_lines.png", caption="Distribuci√≥n de pT de los tres leptones m√°s energ√©ticos en cada evento con posibles cortes.")

        st.markdown("Con esto en mente, consideremos los mejores cortes inferiores del p$_T$ que ayudar√≠an a filtrar eventos de fondo mientras retenemos eventos que posiblmente son candidatos del Higgs.")
        with st.expander("üîç Quiz", expanded=True):
            st.markdown("##### ‚ÅâÔ∏è Selecciona Cortes Apropiados para el p$_T$ de los leptones.")

            st.markdown("""
            En base a lo discutido, ¬øcu√°les de los siguientes valores para cortes nos ayudar√≠an a enfocarnos en eventos como los del Higgs, reduciendo el fondo?
            """)

            cut_options = [
                "20, 15, 10 ",
                "50, 45, 40",
                "2, 5, 10",
                "Ning√∫n corte es necesario"
            ]

            answer_cut = st.radio("Selecciona la mejor opci√≥n para los cortes en p$_T$:", cut_options, index=None, key="pt_cut_quiz")
            
            st.button("¬øQuieres una pista? Haz click aqu√≠ y revisa la im√°gen de arriba" if not st.session_state['show_hint'] else "Esconder pista", on_click=toggle_hint)
            # Checking for correct answer and providing feedback
            if answer_cut == cut_options[0]:
                st.success("¬°Correcto! Establecer cortes en 20, 15, y 10 en los valores de p$_T$ de los leptones puede ayudar a enfocarnos en eventos similares a los del Higgs, filtrando eventos de fondo.")
            elif answer_cut:
                st.error("No realmente. Enf√≥cate en los valores que efectivamente eliminar√≠an ruido de fondo, manteniendo la mayor√≠a de la se√±al.")
            

        st.markdown("Ahora, hagamos los cortes:")

        if st.button("Corte en el p$_T$ de los leptones"):
            if st.session_state.leptonpt_cut_applied:
                st.toast("Ya aplicaste una selecci√≥n. Para reiniciar el an√°lisis ve al final de la p√°gina.", icon='‚ùå')
            else:
                st.session_state.leptonpt_cut_applied = True
                # Display a spinner with the loading message
                random_sleep = random.randint(1, round(lumi/3))
                with st.spinner("Seleccionando eventos... Por favor espere."):
                    # Simulate a time-consuming process with a random sleep
                    time.sleep(random_sleep)
                    st.session_state.leptoncharge_cut_applied = True

                    # Provide feedback to the user
                    st.toast("Selecci√≥n aplicada exitosamente.", icon='‚úÇÔ∏è')
    
    if st.session_state.leptonpt_cut_applied:
        st.info(f"Eventos luego de la selecci√≥n: {analyses[f'{lumi}'][f'{n_leptons}leptons'][f'flavor{flavor}'][f'charge{charge}']['ptLeptons']['nEvents']}")

    # Steep 5: invariant mass plot
    if (st.session_state.leptoncharge_cut_applied and not st.session_state.is_higgs) or (st.session_state.is_higgs and st.session_state.leptonpt_cut_applied):
        st.markdown("## Descubriendo Particulas con la Masa Invariante")
        st.markdown("La *masa invariante* es una herramienta importante en la f√≠sica de part√≠culas. Nos permite reconstruir la masa de las part√≠culas que se producen en las colisiones, incluso cuando no las observamos directamente. Al analizar la energ√≠a y momento de los leptones en el estado final, podemos calcular su *masa invariante* combinada.")
        st.markdown("Al graficarla, la distribuci√≥n de la masa invariante usualmente muestra picos donde las part√≠culas como el bos√≥n Z o el bos√≥n de Higgs aparecen. Estos picos revelan la masa caracter√≠stica de la part√≠cula, permiti√©ndonos \"verla\", incluso cuando ya decay√≥ para el tiempo en el que estamos analizando los datos.")
        st.markdown("Al calcular y graficar la masa invariante, podr√°s observar estos picos y, potencialmente, ¬°descubrir part√≠culas por ti mismo!")

        with st.expander("üîç Quiz", expanded=st.session_state['expand_all']):
            st.markdown("##### ‚ÅâÔ∏è Masa Invariante")
            st.markdown("""
            La masa invariante es una cantidad importante en la f√≠sica de part√≠culas. ¬øQu√© nos puede decir sobre una part√≠cula? 
            """)
            possible_mass = ["La energ√≠a de la part√≠cula", 
                            "El momento de la part√≠cula", 
                            "La masa en reposo de la part√≠cula que produjo los leptones", 
                            "El tipo de part√≠cula que decay√≥"]
            
            answer_mass = st.radio("Elige tu respuesta:", 
                                    possible_mass, 
                                    index=None, key="invariant_mass_selection_quiz")

            if answer_mass == possible_mass[2]:
                st.success("¬°Correcto! La masa invariante nos dice la masa de la part√≠cula que decay√≥ en leptones.")
            elif answer_mass:
                st.error("Incorrecto. Recuerda, la masa invariante est√° relacionada con la masa en reposo de la part√≠cula.")

        if st.button("Get invariant mass"):
            st.session_state.invariant_mass_calculated = True
    # Step 6: Discussion
    if st.session_state.invariant_mass_calculated:
        if st.session_state.is_higgs:
            st.image('analyses/'+analyses[f'{lumi}'][f'{n_leptons}leptons'][f'flavor{flavor}'][f'charge{charge}']['ptLeptons'][f"plot_data_only_{theme['base']}"])
        else:
            st.image('analyses/'+analyses[f'{lumi}'][f'{n_leptons}leptons'][f'flavor{flavor}'][f'charge{charge}'][f"plot_data_only_{theme['base']}"])
        
        if not st.session_state.is_higgs:
            with st.expander("üîç Quiz", expanded=st.session_state['expand_all']):
                st.markdown("##### ‚ÅâÔ∏è Interpretando el Gr√°fico de la Masa Invariante")
                st.markdown("""
                Generaste un gr√°fico de la masa invariante. Si un pico aparece alrededor de 91 GeV, a qu√© part√≠cula puede que corresponda?
                """)

                possible_final = ["Bos√≥n de Higgs", "Bos√≥n Z", "Fot√≥n", "Quark top"]
                answer_final = st.radio("Elige tu respuesta:", 
                                        possible_final, 
                                        index=None, key="invariant_mass_quiz")

                if answer_final == possible_final[1]:
                    st.success("¬°Correcto! Un pico alrededor de 91 GeV tipicamente corresponde al bos√≥n Z.")
                elif answer_final:
                    st.error("Incorrecto. Un pico alrededor de 91 GeV usualmente indican la presencia de un bos√≥n Z, ya que 91 GeV es su masa.")
        
            if answer_final == possible_final[1]:
                if st.session_state.is_z:
                    st.balloons()
                st.markdown("### Discusi√≥n")
                st.markdown("Llegaste al final del an√°lisis. Una vez que est√©s feliz con el resultado espera por la discusi√≥n, o resetea el an√°lisis para intentar uno nuevo.")

        else:
            st.markdown("## ¬øC√≥mo sabemos que hallamos el Higgs?")

            st.markdown("""
            Para determinar si hemos observado al bos√≥n de Higgs, vamos a comparar nuestros datos del detectos con simulaciones de procesos de fondo conocidos y simulaciones de la se√±al. Esta aproximaci√≥n nos permite ver si en nuestros datos se presenta un pico donde esperamos que aparezca el bos√≥ns Higgs.
            """)

            # Step 1: Show data only
            st.markdown("### Paso 1: Observa los Datos")
            st.markdown("Empecemos observando √∫nicamente los datos. Mira cuidadosamente: ¬ønotas alguna caracter√≠stica especial? Sin informaci√≥n adicional, puede ser dif√≠cil decir si alguno de los picos son debido a procesos de fondo o de se√±al.")
            higgs_data_only = 'analyses/'+analyses[f'{lumi}'][f'{n_leptons}leptons'][f'flavor{flavor}'][f'charge{charge}']['ptLeptons'][f"plot_data_only_{theme['base']}"]
            st.image(higgs_data_only, caption="√önicamente datos del detector")

            # Quiz question for the data-only plot
            quiz_data = st.radio(
                "¬øQu√© observas en el gr√°fico con √∫nicamente datos del detector?",
                options=["Un pico evidente", "Algunas fluctuaciones, pero es d√≠ficil decir", "Ninguna caracter√≠stica en particular"],
                index=None
            )
            if quiz_data == "Algunas fluctuaciones, pero es d√≠ficil decir":
                st.success("¬°Exacto! Sin contexto, es dif√≠cil decir cu√°l fluctuacion es se√±al.")
            elif quiz_data == "Un pico evidente":
                st.warning("¬øYa encontraste el Higgs? Continuemos para ver si ese es el caso.")
            elif quiz_data == "Ninguna caracter√≠stica en particular":
                st.info("¬°Vamos a aclarar con algunas simulaciones!")
            
            if quiz_data:
                # Step 2: Show data with background simulation
                st.markdown("### Paso 2: A√±adimos Simulaciones de Fondo")
                st.markdown("Ahora, hemos a√±adido simulaciones de procesos de fondo (sin ninguna se√±al). Esto nos muestra lo que esperamos ver de otras part√≠culas e interacciones en la ausencia del bos√≥n de Higgs. Observa detalladamente: ¬øhay alg√∫n pico que aparezca en adici√≥n al fondo?")
                higgs_data_bkg = 'analyses/'+analyses[f'{lumi}'][f'{n_leptons}leptons'][f'flavor{flavor}'][f'charge{charge}']['ptLeptons'][f"plot_data_backgrounds_{theme['base']}"]
                st.image(higgs_data_bkg, caption="Datos del detector y simulaci√≥n del fondo")

                # Quiz question for data with background
                quiz_background = st.radio(
                    "Con las simulaciones del fondo, ¬ønotas un pico adicional?",
                    options=["S√≠, parece que hay un pico de m√°s", "No, todo parece fondo", "No estoy seguro"],
                    index=None
                )
                if quiz_background == "S√≠, parece que hay un pico de m√°s":
                    st.success("Buena observaci√≥n! Puede que estemos viendo algo m√°s adem√°s del fondo.")
            
                if quiz_background:
                    # Step 3: Show data with background and simulated Higgs signal
                    st.markdown("### Paso 3: Agregamos la Simulaci√≥n de la Se√±al del Higgs")
                    st.markdown("""
                    Finalmente, hemos agregado la simulaci√≥n de la se√±al del bos√≥n de Higgs para ver qu√© tan bien acuerda con los datos. Si los datos se alinean con el fondo m√°s la simulaci√≥n de la se√±al del Higgs, tenemos una fuerte evidencia de la existencia del bos√≥n de Higgs. ¬øPuedes ver un pico evidente donde esperamos el Higgs?
                    """)
                    higgs_data_bkg_sig = 'analyses/'+analyses[f'{lumi}'][f'{n_leptons}leptons'][f'flavor{flavor}'][f'charge{charge}']['ptLeptons'][f"plot_data_backgrounds_signal_{theme['base']}"]
                    st.image(higgs_data_bkg_sig, caption="Datos con fondo y simulaci√≥n de la se√±al del Higgs")

                    # Final quiz question
                    quiz_signal = st.radio(
                        "Al agregar la simulaci√≥n de la se√±al del Higgs, ¬øqu√© podemos concluir?",
                        options=["Hay un pico que concuerda con la se√±al del Higgs", "Todav√≠a no es claro", "El fondo concuerda mejor con los datos"],
                        index=None
                    )
                    if quiz_signal == "Hay un pico que concuerda con la se√±al del Higgs":
                        st.success("¬°Eso es correcto! La alineaci√≥n del pico con la simulaci√≥n de la se√±al del Higgs provee evidencia de que estamos observando el bos√≥n de Higgs.")

                    if quiz_signal:
                        if quiz_signal == "Hay un pico que concuerda con la se√±al del Higgs":
                            st.balloons()
                        st.markdown("---")
                        st.markdown("### Discusi√≥n")
                        st.markdown("Llegaste al final del an√°lisis. Una vez que est√©s feliz con el resultado espera por la discusi√≥n, o resetea el an√°lisis para intentar uno nuevo.")
    

    # Reset button to start the analysis again
    st.markdown('---')
    st.write("""Si quieres volver a seleccionar eventos, haz click en el bot√≥n `Reset analysis`. 
             No te preocupes, ¬°no necesitas volver a cargar los datos! Vas a empezar nuevamente en la selecci√≥n del n√∫mero de leptones.""")
    if st.button("Reset analysis"):
            # Reset flags
            st.session_state.nlepton_cut_applied = False
            st.session_state.leptontype_cut_applied = False
            st.session_state.leptoncharge_cut_applied = False
            st.session_state.leptonpt_cut_applied = False
            st.session_state.invariant_mass_calculated = False
            st.session_state.mc_loaded = False
            st.session_state.expand_all = False
            st.session_state.is_higgs = False
            st.session_state.is_z = False

            # Delete the widget keys from session_state
            for key in ['n_leptons_selection', 'flavor_selection', 'charge_pair_selection']:
                if key in st.session_state:
                    del st.session_state[key]

            st.rerun()
            st.toast("El an√°lisis ha sido reseteado.")